type CycleManagement = record {
  refueling_amount : nat;
  initial_supply : nat;
  refueling_threshold : nat;
};
type CycleManagements = record {
  db : CycleManagement;
  vault_intial_supply : nat;
  refueling_interval : nat64;
  proxy : CycleManagement;
  indexer : CycleManagement;
};
type Env = variant { Production; Test; LocalDevelopment };
type InitError = variant {
  InvalidDestination : text;
  InvalidPrincipal : principal;
  InvalidContent : text;
  InvalidRequest : text;
};
type LensArgs = record { args : vec text; targets : vec text };
type QueryOption = record {
  from_timestamp : opt int64;
  to_timestamp : opt int64;
};
type Result = variant { Ok; Err : InitError };
type Result_1 = variant { Ok; Err : text };
type Snapshot = record {
  id : SnapshotId;
  value : vec record { text; float64 };
};
type SnapshotId = record { id : text };
type SourceType = variant { evm; https; chainsight };
type Sources = record {
  source : text;
  interval_sec : opt nat32;
  attributes : vec record { text; text };
  source_type : SourceType;
};
type Task = record {
  id : text;
  source : principal;
  lens : principal;
  options : TaskOptions;
};
type TaskOption = record { id_to_fetch : text };
type TaskOptions = record { options : vec TaskOption };
service : {
  add_task : (Task) -> ();
  call_args : () -> (LensArgs) query;
  get_last_snapshot : () -> (Snapshot) query;
  get_last_snapshot_value : () -> (vec record { text; float64 }) query;
  get_proxy : () -> (principal);
  get_snapshot : (nat64) -> (Snapshot) query;
  get_snapshot_value : (nat64) -> (vec record { text; float64 }) query;
  get_snapshots : () -> (vec Snapshot) query;
  get_sources : () -> (vec Sources) query;
  get_top_snapshot_values : (nat64) -> (vec vec record { text; float64 }) query;
  get_top_snapshots : (nat64) -> (vec Snapshot) query;
  get_value : (text) -> (opt float64) query;
  index : () -> ();
  init_in : (Env, CycleManagements) -> (Result);
  max_count : () -> (nat64) query;
  proxy_get_last_snapshot : (vec nat8) -> (vec nat8);
  proxy_get_last_snapshot_value : (vec nat8) -> (vec nat8);
  proxy_get_snapshot : (vec nat8) -> (vec nat8);
  proxy_get_snapshot_value : (vec nat8) -> (vec nat8);
  proxy_get_snapshots : (vec nat8) -> (vec nat8);
  proxy_get_top_snapshot_values : (vec nat8) -> (vec nat8);
  proxy_get_top_snapshots : (vec nat8) -> (vec nat8);
  proxy_get_value : (vec nat8) -> (vec nat8);
  proxy_query_between : (vec nat8) -> (vec nat8);
  proxy_query_between_with : (vec nat8) -> (vec nat8);
  proxy_snapshots_len : (vec nat8) -> (vec nat8);
  query_between : (QueryOption) -> (vec Snapshot) query;
  query_between_with : (text, QueryOption) -> (
      vec record { SnapshotId; float64 },
    ) query;
  remove_task : (text) -> ();
  set_task : (nat32, nat32, bool) -> ();
  setup : () -> (Result_1);
  snapshots_len : () -> (nat64) query;
  tasks : () -> (vec Task) query;
  test_index : () -> ();
  update_max_count : (nat64) -> ();
}